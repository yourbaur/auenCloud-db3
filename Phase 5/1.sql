create or replace procedure create_log_table(
    table_name IN varchar2
    )    AUTHID CURRENT_USER is
   table_query varchar2(4000);
   cursor tab_d_cur(tab_name varchar2) is 
        select c.column_name, c.table_name, c.data_type, c.char_length,  c.nullable
                        from all_tab_columns c where upper(c.owner) = upper(sys_context('userenv', 'current_schema')) and trim(c.table_name) = trim(upper(tab_name));
BEGIN
   table_query:='create table manage_'||table_name||' ( id NUMBER GENERATED by default on null as IDENTITY, operation_date date, action varchar2(200), actionauthor varchar2(100), ';
   for table_data in tab_d_cur(table_name)
        loop
            if table_data.data_type= upper('varchar2') then 
                table_query:= table_query||'NEW_'||table_data.column_name||' '|| table_data.data_type||'('||table_data.char_length||')'||',';
                table_query:= table_query||'OLD_'||table_data.column_name||' '|| table_data.data_type||'('||table_data.char_length||')'||',';

            else
                table_query:= table_query||'NEW_'||table_data.column_name||' '|| table_data.data_type||',';
                table_query:= table_query||'OLD_'||table_data.column_name||' '|| table_data.data_type||',';

            end if;

        end loop;
    table_query:=SUBSTR(table_query, 0, LENGTH(table_query) - 1);
    table_query:= table_query||')';

    dbms_output.put_line(table_query);
   EXECUTE IMMEDIATE table_query;
end create_log_table;


create or replace procedure create_log_table_trigger(
    table_name IN varchar2,action IN varchar2
    )    AUTHID CURRENT_USER is
   trigger_query varchar2(4000);
   cursor tab_d_cur(tab_name varchar2) is 
        select c.column_name, c.table_name, c.data_type, c.char_length,  c.nullable
                        from all_tab_columns c where upper(c.owner) = upper(sys_context('userenv', 'current_schema')) and trim(c.table_name) = trim(upper(tab_name));
BEGIN
   trigger_query:='create or replace trigger '||table_name||'_'||action||'_trigger '||
        ' after '||action||' on '||table_name||
        ' for each row '||
        'declare '||
            'v_username varchar2(50); '||
        'begin '||
            'SELECT user INTO v_username FROM dual; '||
            'insert into '||table_name||'_log(actionauthor,action,operation_date,';
   for table_data in tab_d_cur(table_name)
        loop
            trigger_query:= trigger_query||'NEW_'||table_data.column_name||',';
            trigger_query:= trigger_query||'OLD_'||table_data.column_name||',';
        end loop;
    trigger_query:=SUBSTR(trigger_query, 0, LENGTH(trigger_query) - 1);
    trigger_query:= trigger_query||')';
    
    trigger_query:=trigger_query||' values(v_username,'||chr(39)||upper(action)||chr(39)||',SYSDATE,';
    for table_data in tab_d_cur(table_name)
        loop
            trigger_query:= trigger_query||':new.'||table_data.column_name||',';
            trigger_query:= trigger_query||':old.'||table_data.column_name||',';
        end loop;
    trigger_query:=SUBSTR(trigger_query, 0, LENGTH(trigger_query) - 1);
    trigger_query:= trigger_query||'); '||
    'end;';
    dbms_output.put_line(trigger_query);
   EXECUTE IMMEDIATE trigger_query;
end create_log_table_trigger;







CREATE OR REPLACE TRIGGER dynamic_logging
AFTER CREATE ON SCHEMA
BEGIN
    if instr(ORA_DICT_OBJ_NAME,'LOG')<=0 then
        create_log_table(ORA_DICT_OBJ_NAME);
        create_log_table_trigger(ORA_DICT_OBJ_NAME,'delete');
        create_log_table_trigger(ORA_DICT_OBJ_NAME,'insert');
        create_log_table_trigger(ORA_DICT_OBJ_NAME,'update');
    end if;
END;